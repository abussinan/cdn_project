worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Define the cache zone for L1
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=l1_cache:10m inactive=1m max_size=1g;

    # Rate Limiting Configuration [cite: 9]
    # Initial limit: 200 requests/second (burst allows temporary spikes)
    limit_req_zone $binary_remote_addr zone=initial_limit:10m rate=200r/s;
    # Reduced limit: 50 requests/second if initial is exceeded
    limit_req_zone $binary_remote_addr zone=reduced_limit:10m rate=50r/s;
    # Block if reduced limit is also breached
    limit_req_zone $binary_remote_addr zone=block_limit:10m rate=1r/s; # A very low rate to trigger blocking

    server {
        listen 80;

        # Resolve the nginx_l2 hostname to its Docker internal IP
        resolver 127.0.0.11 valid=5s; # Docker's embedded DNS resolver

        location / {
            # Apply rate limiting [cite: 9, 10, 11]
            limit_req zone=initial_limit burst=400 nodelay; # Allow initial burst
            limit_req zone=reduced_limit burst=100; # Apply after initial limit
            limit_req zone=block_limit burst=0 nodelay; # Triggers 503 if block_limit is exceeded

            limit_req_log_level info;
            limit_req_status_code 503; # Return 503 Service Unavailable on limit exceed

            # Proxy requests to L2 cache
            proxy_pass http://nginx_l2:80; # 'nginx_l2' is the service name in docker-compose

            # Disable caching for CSS files 
            if ($request_uri ~* \.css$) {
                add_header X-Cache-Status "CSS - Not Cached";
                proxy_no_cache 1;
                proxy_cache_bypass 1;
            }

            # PNG Files Cache Rules for L1: Cache after 3 requests, for 1 minute 
            location ~* \.png$ {
                proxy_cache l1_cache;
                proxy_cache_valid 200 1m; # Cache 200 OK responses for 1 minute 
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_min_uses 3; # Cache after 3 requests 
                add_header X-Cache-Status $upstream_cache_status;
            }

            # General caching settings (except for explicitly excluded types like CSS)
            proxy_cache l1_cache;
            proxy_cache_valid 200 5m; # Cache general content for 5 minutes (adjust as needed)
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
}