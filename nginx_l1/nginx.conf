# Define the cache zone for L1
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=l1_cache:10m inactive=1m max_size=1g;

# Rate Limiting Configuration
# Initial limit: 200 requests/second (burst allows temporary spikes)
# limit_req_zone $binary_remote_addr zone=initial_limit:10m rate=200r/s;
# Reduced limit: 50 requests/second if initial is exceeded
# limit_req_zone $binary_remote_addr zone=reduced_limit:10m rate=50r/s;
# Block if reduced limit is also breached
# limit_req_zone $binary_remote_addr zone=block_limit:10m rate=1r/s; # A very low rate to trigger blocking

server {
    listen 80;

    # Resolve the nginx_l2 hostname to its Docker internal IP
    resolver 127.0.0.11 valid=5s; # Docker's embedded DNS resolver

    # --- Specific location for CSS files (no caching) ---
    location ~* \.css$ {
        add_header X-Cache-Status "CSS - Not Cached";
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        proxy_pass http://nginx_l2:80; # Still pass to L2
        # Apply rate limiting to CSS files as well, if desired
        # limit_req zone=initial_limit burst=400 nodelay;
        # limit_req zone=reduced_limit burst=100;
        # limit_req zone=block_limit nodelay;
        # limit_req_log_level info;
    }

    # --- Specific location for PNG files (L1 caching rules) ---
    location ~* \.jpg$ {
        proxy_cache l1_cache;
        proxy_cache_valid 200 1m; # Cache 200 OK responses for 1 minute
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_min_uses 3; # Cache after 3 requests
        add_header X-Cache-Status $upstream_cache_status;
        proxy_pass http://nginx_l2:80; # Still pass to L2
        # limit_req zone=initial_limit burst=400 nodelay;
        # limit_req zone=reduced_limit burst=100;
        # limit_req zone=block_limit nodelay;
        # limit_req_log_level info;
    }

    # --- General location (L1 caching for everything else) ---
    location / {
        # Apply rate limiting
        # limit_req zone=initial_limit burst=400 nodelay;
        # limit_req zone=reduced_limit burst=100;
        # limit_req zone=block_limit nodelay;
        # limit_req_log_level info;

        # Proxy requests to L2 cache
        proxy_pass http://nginx_l2:80;
        # General caching settings
        proxy_cache l1_cache;
        proxy_cache_valid 200 10m; # Cache general content for 5 minutes (adjust as needed)
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Cache-Status $upstream_cache_status;
    }
}